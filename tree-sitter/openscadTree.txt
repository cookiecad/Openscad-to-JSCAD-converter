source_file
// Thread diameter, measured on outside of thread
<
  comment
>
outer_thread_diameter = 52
<
  assignment
    identifier
    number
>
// Total height of the trap
<
  comment
>
height = 55
<
  assignment
    identifier
    number
>
// Number of intertwined threads
<
  comment
>
thread_starts = 4
<
  assignment
    identifier
    number
>
// Thread height = the inside height of the lid section. I found 11 mm to be reasonably universal
<
  comment
>
lid_inner_height = 11
<
  assignment
    identifier
    number
>
/* [ Output options ] */
<
  comment
>
// How detailed the model will be rendered. A circle will have at most 360/fa segments
<
  comment
>
fa_final = 2
<
  assignment
    identifier
    number
>
// How detailed the model will be rendered. Maximum size of a circle segment fs. 
<
  comment
>
fs_final = 0.2
<
  assignment
    identifier
    number
>
// Same settings, but for preview
<
  comment
>
fa_preview = 9
<
  assignment
    identifier
    number
>
fs_preview = 0.5
<
  assignment
    identifier
    number
>
$fa = $preview ? fa_preview : fa_final
<
  assignment
    special_variable
    ternary_expression
      special_variable
      identifier
      identifier
>
$fs = $preview ? fs_preview : fs_final
<
  assignment
    special_variable
    ternary_expression
      special_variable
      identifier
      identifier
>
  module_declaration
_customizer_end
<
    identifier
>
()
<
    parameters_declaration
>
{}
<
    union_block
>
// Some constants you might want to tweak
<
  comment
>
CLEARANCE = 0.5
<
  assignment
    identifier
    number
>
// Chamfer along the outside
<
  comment
>
CHAMFER = 0.6
<
  assignment
    identifier
    number
>
// Width of the inside of the rim
<
  comment
>
RIM_WIDTH = 5.5
<
  assignment
    identifier
    number
>
// All walls have equal thickness
<
  comment
>
WALL_THICKNESS = 1.2
<
  assignment
    identifier
    number
>
THREAD_DEPTH = 1.5
<
  assignment
    identifier
    number
>
// Angle of the flat section of the thread profile
<
  comment
>
THREAD_ANGLE = 35
<
  assignment
    identifier
    number
>
// Radius of the tip of the thread profile
<
  comment
>
THREAD_TIP_RADIUS = 0.7
<
  assignment
    identifier
    number
>
// I foun that most jars have a thread pitch of ~14, but the value does not seem to matter much
<
  comment
>
THREAD_PITCH = 14
<
  assignment
    identifier
    number
>
THREAD_HALF_BASE_WIDTH = THREAD_TIP_RADIUS * cos(THREAD_ANGLE) + (THREAD_DEPTH - THREAD_TIP_RADIUS * sin(THREAD_ANGLE)) * tan(THREAD_ANGLE)
<
  assignment
    identifier
    binary_expression
      binary_expression
        identifier
        function_call
          identifier
          arguments
            identifier
      binary_expression
        parenthesized_expression
          binary_expression
            identifier
            binary_expression
              identifier
              function_call
                identifier
                arguments
                  identifier
        function_call
          identifier
          arguments
            identifier
>
// This determines how long each of the thread fragments on the lid are 
<
  comment
>
THREAD_HEIGHT = 0.8
<
  assignment
    identifier
    number
>
PERFORATION_HOLE_HEIGHT = 3
<
  assignment
    identifier
    number
>
PERFORATION_HOLE_WIDTH = 0.6
<
  assignment
    identifier
    number
>
PERFORATION_DISTANCE_V = 2
<
  assignment
    identifier
    number
>
PERFORATION_DISTANCE_H = 3
<
  assignment
    identifier
    number
>
// Radius of hole at the bottom where the guests are welcomed
<
  comment
>
ENTRANCE_RADIUS = 1.8
<
  assignment
    identifier
    number
>
fruitfly_trap(
  outer_thread_diameter = outer_thread_diameter,
  lid_inner_height = lid_inner_height,
  thread_starts = thread_starts,
  height = height
);
<
  transform_chain
    module_call
      identifier
      arguments
        assignment
          identifier
          identifier
        assignment
          identifier
          identifier
        assignment
          identifier
          identifier
        assignment
          identifier
          identifier
>
  module_declaration
fruitfly_trap
<
    identifier
>
(
  outer_thread_diameter,
  lid_inner_height,
  thread_starts,
  height,
)
<
    parameters_declaration
      identifier
      identifier
      identifier
      identifier
>
{
  difference() {
    union() {
      rotate_extrude() 
        fruitfly_trap_profile(
          outer_thread_diameter = outer_thread_diameter,
          lid_inner_height = lid_inner_height,
          height = height
        );
      translate([0, 0, lid_inner_height + WALL_THICKNESS / 2 - THREAD_HALF_BASE_WIDTH - THREAD_HEIGHT])
      copy_rotate(n = thread_starts)
        qthread(
         h = THREAD_HEIGHT,
         r = outer_thread_diameter / 2 + CLEARANCE,
         pitch = THREAD_PITCH,
         segs = 100
         ) 
           thread_profile();
    }
   
    perforation_layer_height = PERFORATION_HOLE_HEIGHT + PERFORATION_DISTANCE_V;
    perforation_start_z = WALL_THICKNESS + PERFORATION_HOLE_HEIGHT;
    num_perforation_layers = floor((height - perforation_start_z) / perforation_layer_height);
    inner_radius = outer_thread_diameter / 2 - RIM_WIDTH;
   
    union() {
      for (i = [0 : num_perforation_layers - 1]) {
        perforation_z = perforation_start_z + i * perforation_layer_height;
        factor = (inner_radius - ENTRANCE_RADIUS) / height; 
        r = inner_radius - perforation_z * factor;
        num_holes = floor(r * 2 * PI / (PERFORATION_HOLE_WIDTH + PERFORATION_DISTANCE_H));
        if (num_holes >= 4) {
          perforation_hole_angle = 360 * (1 / num_holes - PERFORATION_DISTANCE_H / (r * 2 * PI));
          rotate([0, 0, i * 5])
          copy_rotate(num_holes)
          translate([0, 0, perforation_z])
          cube([inner_radius, PERFORATION_HOLE_WIDTH, PERFORATION_HOLE_HEIGHT]);
        }
      }    
    }
  }
}
<
    union_block
      transform_chain
        module_call
          identifier
          arguments
        union_block
          transform_chain
            module_call
              identifier
              arguments
            union_block
              transform_chain
                module_call
                  identifier
                  arguments
                transform_chain
                  module_call
                    identifier
                    arguments
                      assignment
                        identifier
                        identifier
                      assignment
                        identifier
                        identifier
                      assignment
                        identifier
                        identifier
              transform_chain
                module_call
                  identifier
                  arguments
                    list
                      number
                      number
                      binary_expression
                        binary_expression
                          binary_expression
                            identifier
                            binary_expression
                              identifier
                              number
                          identifier
                        identifier
                transform_chain
                  module_call
                    identifier
                    arguments
                      assignment
                        identifier
                        identifier
                  transform_chain
                    module_call
                      identifier
                      arguments
                        assignment
                          identifier
                          identifier
                        assignment
                          identifier
                          binary_expression
                            binary_expression
                              identifier
                              number
                            identifier
                        assignment
                          identifier
                          identifier
                        assignment
                          identifier
                          number
                    transform_chain
                      module_call
                        identifier
                        arguments
          assignment
            identifier
            binary_expression
              identifier
              identifier
          assignment
            identifier
            binary_expression
              identifier
              identifier
          assignment
            identifier
            function_call
              identifier
              arguments
                binary_expression
                  parenthesized_expression
                    binary_expression
                      identifier
                      identifier
                  identifier
          assignment
            identifier
            binary_expression
              binary_expression
                identifier
                number
              identifier
          transform_chain
            module_call
              identifier
              arguments
            union_block
              for_block
                parenthesized_assignments
                  assignment
                    identifier
                    range
                      number
                      binary_expression
                        identifier
                        number
                union_block
                  assignment
                    identifier
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        identifier
                  assignment
                    identifier
                    binary_expression
                      parenthesized_expression
                        binary_expression
                          identifier
                          identifier
                      identifier
                  assignment
                    identifier
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        identifier
                  assignment
                    identifier
                    function_call
                      identifier
                      arguments
                        binary_expression
                          binary_expression
                            binary_expression
                              identifier
                              number
                            identifier
                          parenthesized_expression
                            binary_expression
                              identifier
                              identifier
                  if_block
                    parenthesized_expression
                      binary_expression
                        identifier
                        number
                    union_block
                      assignment
                        identifier
                        binary_expression
                          number
                          parenthesized_expression
                            binary_expression
                              binary_expression
                                number
                                identifier
                              binary_expression
                                identifier
                                parenthesized_expression
                                  binary_expression
                                    binary_expression
                                      identifier
                                      number
                                    identifier
                      transform_chain
                        module_call
                          identifier
                          arguments
                            list
                              number
                              number
                              binary_expression
                                identifier
                                number
                        transform_chain
                          module_call
                            identifier
                            arguments
                              identifier
                          transform_chain
                            module_call
                              identifier
                              arguments
                                list
                                  number
                                  number
                                  identifier
                            transform_chain
                              module_call
                                identifier
                                arguments
                                  list
                                    identifier
                                    identifier
                                    identifier
>
  module_declaration
qthread
<
    identifier
>
(h, r, pitch, segs = 12)
<
    parameters_declaration
      identifier
      identifier
      identifier
      assignment
        identifier
        number
>
{
  layers = floor(h / pitch);
  end_angle = (h / pitch - layers) * 360; 
  std_seg_angle = 360 / segs;
  seg_vdist = pitch / segs;
  seg_hdist = r * sin(std_seg_angle);
  a = asin(seg_vdist / seg_hdist);
  union() {
    for (j = [0 : layers]) {
      segs_for_layer = (j < layers) 
        ? segs
        : ceil(end_angle / std_seg_angle);
      translate([0, 0, pitch * j]) {
        for (i = [0 : segs_for_layer - 1]) {
          seg_angle = (j < layers || i < segs_for_layer - 1) 
            ? std_seg_angle 
            : end_angle - std_seg_angle * i;
          translate([0, 0, seg_vdist * i])
          rotate([a, 0, std_seg_angle * i])
          rotate_extrude(angle = seg_angle / cos(a) + 0.2) {
              translate([r, 0])
              children();
          }
        }
      }
    }
    // rounded end caps
    translate([r, 0.001, 0])
    rotate([a, 0, 0])
    rotate([0, 90, 0])
    thread_end() children();
    
    rotate([0, 0, end_angle + 0.2])
    translate([r, 0, h])
    rotate([a + 180, 0, 0])
    rotate([0, 90, 0])
    thread_end() children();
  }
}
<
    union_block
      assignment
        identifier
        function_call
          identifier
          arguments
            binary_expression
              identifier
              identifier
      assignment
        identifier
        binary_expression
          parenthesized_expression
            binary_expression
              binary_expression
                identifier
                identifier
              identifier
          number
      assignment
        identifier
        binary_expression
          number
          identifier
      assignment
        identifier
        binary_expression
          identifier
          identifier
      assignment
        identifier
        binary_expression
          identifier
          function_call
            identifier
            arguments
              identifier
      assignment
        identifier
        function_call
          identifier
          arguments
            binary_expression
              identifier
              identifier
      transform_chain
        module_call
          identifier
          arguments
        union_block
          for_block
            parenthesized_assignments
              assignment
                identifier
                range
                  number
                  identifier
            union_block
              assignment
                identifier
                ternary_expression
                  parenthesized_expression
                    binary_expression
                      identifier
                      identifier
                  identifier
                  function_call
                    identifier
                    arguments
                      binary_expression
                        identifier
                        identifier
              transform_chain
                module_call
                  identifier
                  arguments
                    list
                      number
                      number
                      binary_expression
                        identifier
                        identifier
                union_block
                  for_block
                    parenthesized_assignments
                      assignment
                        identifier
                        range
                          number
                          binary_expression
                            identifier
                            number
                    union_block
                      assignment
                        identifier
                        ternary_expression
                          parenthesized_expression
                            binary_expression
                              binary_expression
                                identifier
                                identifier
                              binary_expression
                                identifier
                                binary_expression
                                  identifier
                                  number
                          identifier
                          binary_expression
                            identifier
                            binary_expression
                              identifier
                              identifier
                      transform_chain
                        module_call
                          identifier
                          arguments
                            list
                              number
                              number
                              binary_expression
                                identifier
                                identifier
                        transform_chain
                          module_call
                            identifier
                            arguments
                              list
                                identifier
                                number
                                binary_expression
                                  identifier
                                  identifier
                          transform_chain
                            module_call
                              identifier
                              arguments
                                assignment
                                  identifier
                                  binary_expression
                                    binary_expression
                                      identifier
                                      function_call
                                        identifier
                                        arguments
                                          identifier
                                    number
                            union_block
                              transform_chain
                                module_call
                                  identifier
                                  arguments
                                    list
                                      identifier
                                      number
                                transform_chain
                                  module_call
                                    identifier
                                    arguments
          comment
          transform_chain
            module_call
              identifier
              arguments
                list
                  identifier
                  number
                  number
            transform_chain
              module_call
                identifier
                arguments
                  list
                    identifier
                    number
                    number
              transform_chain
                module_call
                  identifier
                  arguments
                    list
                      number
                      number
                      number
                transform_chain
                  module_call
                    identifier
                    arguments
                  transform_chain
                    module_call
                      identifier
                      arguments
          transform_chain
            module_call
              identifier
              arguments
                list
                  number
                  number
                  binary_expression
                    identifier
                    number
            transform_chain
              module_call
                identifier
                arguments
                  list
                    identifier
                    number
                    identifier
              transform_chain
                module_call
                  identifier
                  arguments
                    list
                      binary_expression
                        identifier
                        number
                      number
                      number
                transform_chain
                  module_call
                    identifier
                    arguments
                      list
                        number
                        number
                        number
                  transform_chain
                    module_call
                      identifier
                      arguments
                    transform_chain
                      module_call
                        identifier
                        arguments
>
  module_declaration
fruitfly_trap_profile
<
    identifier
>
(
  outer_thread_diameter,
  lid_inner_height,
  height,
  entrance_diameter
)
<
    parameters_declaration
      identifier
      identifier
      identifier
      identifier
>
{
  outer_thread_radius = outer_thread_diameter / 2 + CLEARANCE;
  outer_radius = outer_thread_radius + WALL_THICKNESS;
  inner_rim_radius = outer_thread_radius - RIM_WIDTH;
  lid_outer_height = lid_inner_height + WALL_THICKNESS;
  wall_thickness_h = wall_thickness_h(height = height, inner_rim_radius = inner_rim_radius);
  inner_top_radius = inner_top_radius(height = height, inner_rim_radius = inner_rim_radius);
  union() {
    polygon([
      [inner_top_radius, 0],
      [outer_radius - CHAMFER, 0],
      [outer_radius, CHAMFER],
      [outer_radius, lid_outer_height - WALL_THICKNESS / 2],
      [outer_radius - WALL_THICKNESS, lid_outer_height - WALL_THICKNESS / 2],
      [outer_radius - WALL_THICKNESS, WALL_THICKNESS],
      [inner_rim_radius, WALL_THICKNESS],
      [ENTRANCE_RADIUS + wall_thickness_h, height],
      [ENTRANCE_RADIUS, height]
    ]);
    translate([outer_radius - WALL_THICKNESS / 2, lid_outer_height - WALL_THICKNESS / 2])
    circle(d = WALL_THICKNESS);   
  }  
}
<
    union_block
      assignment
        identifier
        binary_expression
          binary_expression
            identifier
            number
          identifier
      assignment
        identifier
        binary_expression
          identifier
          identifier
      assignment
        identifier
        binary_expression
          identifier
          identifier
      assignment
        identifier
        binary_expression
          identifier
          identifier
      assignment
        identifier
        function_call
          identifier
          arguments
            assignment
              identifier
              identifier
            assignment
              identifier
              identifier
      assignment
        identifier
        function_call
          identifier
          arguments
            assignment
              identifier
              identifier
            assignment
              identifier
              identifier
      transform_chain
        module_call
          identifier
          arguments
        union_block
          transform_chain
            module_call
              identifier
              arguments
                list
                  list
                    identifier
                    number
                  list
                    binary_expression
                      identifier
                      identifier
                    number
                  list
                    identifier
                    identifier
                  list
                    identifier
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        number
                  list
                    binary_expression
                      identifier
                      identifier
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        number
                  list
                    binary_expression
                      identifier
                      identifier
                    identifier
                  list
                    identifier
                    identifier
                  list
                    binary_expression
                      identifier
                      identifier
                    identifier
                  list
                    identifier
                    identifier
          transform_chain
            module_call
              identifier
              arguments
                list
                  binary_expression
                    identifier
                    binary_expression
                      identifier
                      number
                  binary_expression
                    identifier
                    binary_expression
                      identifier
                      number
            transform_chain
              module_call
                identifier
                arguments
                  assignment
                    identifier
                    identifier
>
  module_declaration
thread_profile
<
    identifier
>
()
<
    parameters_declaration
>
{
  union() {
    tip_radius_center_x = -THREAD_DEPTH + THREAD_TIP_RADIUS;

    translate([tip_radius_center_x, 0])
    circle(r = THREAD_TIP_RADIUS);
    polygon([
      [ tip_radius_center_x - THREAD_TIP_RADIUS * sin(THREAD_ANGLE), -THREAD_TIP_RADIUS  * cos(THREAD_ANGLE) ],
      [ 0, -THREAD_HALF_BASE_WIDTH ],
      [ 0.1, -THREAD_HALF_BASE_WIDTH ],
      [ 0.1, THREAD_HALF_BASE_WIDTH ],
      [ 0, THREAD_HALF_BASE_WIDTH ],
      [ tip_radius_center_x - THREAD_TIP_RADIUS * sin(THREAD_ANGLE), THREAD_TIP_RADIUS * cos(THREAD_ANGLE) ]
    ]);
  }
}
<
    union_block
      transform_chain
        module_call
          identifier
          arguments
        union_block
          assignment
            identifier
            binary_expression
              unary_expression
                identifier
              identifier
          transform_chain
            module_call
              identifier
              arguments
                list
                  identifier
                  number
            transform_chain
              module_call
                identifier
                arguments
                  assignment
                    identifier
                    identifier
          transform_chain
            module_call
              identifier
              arguments
                list
                  list
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        function_call
                          identifier
                          arguments
                            identifier
                    unary_expression
                      binary_expression
                        identifier
                        function_call
                          identifier
                          arguments
                            identifier
                  list
                    number
                    unary_expression
                      identifier
                  list
                    number
                    unary_expression
                      identifier
                  list
                    number
                    identifier
                  list
                    number
                    identifier
                  list
                    binary_expression
                      identifier
                      binary_expression
                        identifier
                        function_call
                          identifier
                          arguments
                            identifier
                    binary_expression
                      identifier
                      function_call
                        identifier
                        arguments
                          identifier
>
  module_declaration
thread_end
<
    identifier
>
()
<
    parameters_declaration
>
{
    rotate_extrude(angle = 180)
    rotate([0, 0, 90])
    intersection() {
      translate([-500, 0])
      square(1000);
      children();
    }
}
<
    union_block
      transform_chain
        module_call
          identifier
          arguments
            assignment
              identifier
              number
        transform_chain
          module_call
            identifier
            arguments
              list
                number
                number
                number
          transform_chain
            module_call
              identifier
              arguments
            union_block
              transform_chain
                module_call
                  identifier
                  arguments
                    list
                      unary_expression
                        number
                      number
                transform_chain
                  module_call
                    identifier
                    arguments
                      number
              transform_chain
                module_call
                  identifier
                  arguments
>
  module_declaration
copy_rotate
<
    identifier
>
(n)
<
    parameters_declaration
      identifier
>
{
  for (i = [0 : n - 1]) {
    rotate([0, 0, 360 / n * i])
    children();
  }
}
<
    union_block
      for_block
        parenthesized_assignments
          assignment
            identifier
            range
              number
              binary_expression
                identifier
                number
        union_block
          transform_chain
            module_call
              identifier
              arguments
                list
                  number
                  number
                  binary_expression
                    binary_expression
                      number
                      identifier
                    identifier
            transform_chain
              module_call
                identifier
                arguments
>
function wall_thickness_h(height, inner_rim_radius) =
  let(inner_height = (height - WALL_THICKNESS))
  let(h = inner_rim_radius - ENTRANCE_RADIUS)
  let(k = WALL_THICKNESS ^ 2 / inner_height ^ 2)
  let(a = k - 1)
  let(b = -2 * k * h)
  let(c = WALL_THICKNESS ^ 2 + k * h ^ 2)
  echo("k", k, "a", a, "b", b, "c", c)
  (-b - sqrt(b ^ 2 - 4 * a * c)) / (2 * a)
<
  function_declaration
    identifier
    parameters_declaration
      identifier
      identifier
    let_expression
      parenthesized_assignments
        assignment
          identifier
          parenthesized_expression
            binary_expression
              identifier
              identifier
      let_expression
        parenthesized_assignments
          assignment
            identifier
            binary_expression
              identifier
              identifier
        let_expression
          parenthesized_assignments
            assignment
              identifier
              binary_expression
                binary_expression
                  identifier
                  number
                binary_expression
                  identifier
                  number
          let_expression
            parenthesized_assignments
              assignment
                identifier
                binary_expression
                  identifier
                  number
            let_expression
              parenthesized_assignments
                assignment
                  identifier
                  unary_expression
                    binary_expression
                      binary_expression
                        number
                        identifier
                      identifier
              let_expression
                parenthesized_assignments
                  assignment
                    identifier
                    binary_expression
                      binary_expression
                        identifier
                        number
                      binary_expression
                        identifier
                        binary_expression
                          identifier
                          number
                binary_expression
                  function_call
                    function_call
                      identifier
                      arguments
                        string
                        identifier
                        string
                        identifier
                        string
                        identifier
                        string
                        identifier
                    arguments
                      binary_expression
                        unary_expression
                          identifier
                        function_call
                          identifier
                          arguments
                            binary_expression
                              binary_expression
                                identifier
                                number
                              binary_expression
                                binary_expression
                                  number
                                  identifier
                                identifier
                  parenthesized_expression
                    binary_expression
                      number
                      identifier
>
function inner_top_radius(height, inner_rim_radius) =
  let(wall_thickness_h = wall_thickness_h(height = height, inner_rim_radius = inner_rim_radius))
  inner_rim_radius - (inner_rim_radius - wall_thickness_h - ENTRANCE_RADIUS) / (height - WALL_THICKNESS) * WALL_THICKNESS
<
  function_declaration
    identifier
    parameters_declaration
      identifier
      identifier
    let_expression
      parenthesized_assignments
        assignment
          identifier
          function_call
            identifier
            arguments
              assignment
                identifier
                identifier
              assignment
                identifier
                identifier
      binary_expression
        identifier
        binary_expression
          binary_expression
            parenthesized_expression
              binary_expression
                binary_expression
                  identifier
                  identifier
                identifier
            parenthesized_expression
              binary_expression
                identifier
                identifier
          identifier
>
